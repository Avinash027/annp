# McCulloch-Pitts (MP) Neuron Documentation

## 1. PSEUDOCODE

```
Function MP_Neuron(inputs, weights, threshold):
    1. Calculate weighted_sum = inputs[0]*weights[0] + inputs[1]*weights[1]
    2. If weighted_sum >= threshold:
        return 1
    3. Else:
        return 0

Function AND_NOT(x1, x2):
    1. Set weights = [1, -1]
    2. Set threshold = 1
    3. Create input array from x1, x2
    4. Return MP_Neuron(inputs, weights, threshold)
```

## 2. CODE EXPLANATION

The code implements a McCulloch-Pitts neuron, one of the earliest artificial neuron models:

1. MP Neuron Function:
   - Takes binary inputs, weights, and a threshold
   - Computes weighted sum of inputs
   - Applies threshold activation
   - Returns binary output (0 or 1)

2. AND_NOT Implementation:
   - Implements logical AND_NOT operation
   - Uses weights [1, -1] to create inhibitory effect
   - Threshold set to 1 for correct logic
   - Truth table implementation:
     * 0 AND_NOT 0 = 0
     * 1 AND_NOT 0 = 1
     * 0 AND_NOT 1 = 0
     * 1 AND_NOT 1 = 0

## 3. REAL-LIFE EXAMPLES

1. Simple Decision Making:
   - Example: Thermostat Control
     * Input 1: Temperature sensor (1 if hot, 0 if cold)
     * Input 2: Override switch (1 if on, 0 if off)
     * Output: AC activation (1 = on, 0 = off)

2. Basic Logic Gates:
   - Used in digital circuit design
   - Creating inhibitory control systems
   - Basic building block for more complex neural networks

3. Biological Neuron Modeling:
   - Simplified model of biological neuron
   - Demonstrates basic principle of neural inhibition
   - Shows how neurons can perform logical operations

## 4. FUNCTIONS AND THEIR WORK

1. Library Functions:
   - numpy (np): Used for array operations
   - np.dot(): Computes dot product of inputs and weights

2. Custom Functions:
   - mp_neuron(inputs, weights, threshold):
     * Core neural computation
     * Implements threshold logic
     * Returns binary output

   - and_not(x1, x2):
     * Implements AND_NOT logic gate
     * Uses MP neuron with specific weights
     * Demonstrates practical use of MP neuron

## 5. WORKFLOW

1. Input Processing:
   a. Receive two binary inputs (x1, x2)
   b. Convert to numpy array
   c. Apply predefined weights

2. Computation:
   a. Calculate weighted sum
   b. Compare with threshold
   c. Determine binary output

3. Output Generation:
   - Displays truth table format
   - Shows all possible input combinations
   - Demonstrates logical behavior

Key Features:
- Binary inputs and outputs
- Fixed weights and threshold
- No learning capability
- Deterministic behavior
- Simple but powerful logical operation

This implementation demonstrates:
- Basic neural computation
- Logical operations using neurons
- Binary threshold activation
- Historical significance in AI development